"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.serve = exports.watch = exports.logger = void 0;
const util_1 = __importDefault(require("util"));
const sirv_1 = __importDefault(require("sirv"));
const polka_1 = __importDefault(require("polka"));
const chalk_1 = __importDefault(require("chalk"));
const chokidar_1 = __importDefault(require("chokidar"));
const createLogger = (name, color) => {
    const prefix = color(name) + ' - ';
    return (format, ...args) => console.log(prefix + util_1.default.formatWithOptions({ colors: true }, format, ...args));
};
const createErrorLogger = (name) => {
    const prefix = chalk_1.default.red(name) + ' - ';
    return (message, err) => console.error(prefix + message + '\n' + chalk_1.default.gray(err.stack));
};
exports.logger = {
    ready: createLogger('ready', chalk_1.default.gray),
    wait: createLogger('wait', chalk_1.default.magenta),
    done: createLogger('done', chalk_1.default.cyan),
    warn: createLogger('warn', chalk_1.default.yellow),
    error: createErrorLogger('error'),
};
const watch = (watchPath, callback, options = { ignore: [] }) => {
    const watcher = chokidar_1.default.watch(watchPath, {
        ignoreInitial: true,
        ignored: (path) => options.ignore.filter((i) => path.startsWith(i)).length,
    });
    watcher.on('all', callback);
    watcher.on('ready', (path) => callback('ready', path));
};
exports.watch = watch;
const serve = async (directory, port) => {
    const serveStatic = sirv_1.default(directory, { dev: true });
    await polka_1.default().use(serveStatic).listen(port);
};
exports.serve = serve;
